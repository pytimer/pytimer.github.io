<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coredns on Pytimer Blog</title>
    <link>https://pytimer.github.io/tags/coredns/</link>
    <description>Recent content in Coredns on Pytimer Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Jun 2019 18:06:42 +0800</lastBuildDate>
    
	<atom:link href="https://pytimer.github.io/tags/coredns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coredns简介</title>
      <link>https://pytimer.github.io/2019/06/coredns%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 06 Jun 2019 18:06:42 +0800</pubDate>
      
      <guid>https://pytimer.github.io/2019/06/coredns%E7%AE%80%E4%BB%8B/</guid>
      <description>DNS Linux上通过/etc/resolv.conf文件可以配置DNS相关信息，该文件是resovler类库所使用的配置文件，每当通过域名访问其他主机时，该类库会将域名转换为对应的IP，然后才可以进行访问。
resolv.conf 配置 nameserver 该选项用来配置DNS服务器地址，可以指定多个DNS
domain 该选项用来指定本地的域名，没有配置search的情况下，search默认使用的为domain的值
search 用来指定多个域名，用空格分隔。当访问的域名无法被DNS服务器解析时，resolver会将该域名后加上search指定的值，重新请求DNS，直到被正确解析或者列表循环结束。
nslookup 默认的超时时间为15s左右。
没有配置nameserver 在没有配置任何DNS的情况下，解析域名失败，返回如下错误：
$ nslookup baidu.com ;; connection timed out; no servers could be reached  配置nameserver $ cat /etc/resolv.conf nameserver 8.8.8.8  $ nslookup baidu.com Server: 8.8.8.8 Address: 8.8.8.8#53 Non-authoritative answer: Name: baidu.com Address: x.x.x.x Name: baidu.com Address: y.y.y.y  如果没有解析域名成功会有如下信息：
$ nslookup aaa.bbb.ccc Server: 8.8.8.8 Address: 8.8.8.8#53 ** server can&#39;t find aaa.bbb.ccc: NXDOMAIN  DNS常见记录类型  A：指定域名对应的IP地址</description>
    </item>
    
    <item>
      <title>[FAQ] Coredns启动失败</title>
      <link>https://pytimer.github.io/2019/03/faq-coredns%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Tue, 26 Mar 2019 22:09:07 +0800</pubDate>
      
      <guid>https://pytimer.github.io/2019/03/faq-coredns%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5/</guid>
      <description>coredns pod status is CrashLoopBackOff $ kubectl get pod -n kube-system NAME READY STATUS RESTARTS AGE coredns-fb8b8dccf-cl9rp 0/1 CrashLoopBackOff 6 10m coredns-fb8b8dccf-v4lsv 0/1 CrashLoopBackOff 6 10m etcd-pytimer 1/1 Running 0 9m24s kube-apiserver-pytimer 1/1 Running 0 9m21s kube-controller-manager-pytimer 1/1 Running 0 9m24s kube-flannel-ds-amd64-84vxg 1/1 Running 0 8m14s kube-proxy-cgqpn 1/1 Running 0 10m kube-scheduler-pytimer 1/1 Running 0 9m15s  查看coredns pod的日志，发现如下错误：
$ kubectl logs -n kube-system coredns-fb8b8dccf-cl9rp .:53 2019-03-26T13:58:34.693Z [INFO] CoreDNS-1.3.1 2019-03-26T13:58:34.</description>
    </item>
    
  </channel>
</rss>